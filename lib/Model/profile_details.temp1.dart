class ProfileDetailsTemp1 {
  String? vat;
  String? idVerified;
  String? documentType;
  String? workInUkVerified;
  String? workInUkVerifiedDocument;
  String? individualRight;
  String? individualRightExpiry;
  String? criminalityCheckType;
  String? levelOfCheck;
  String? checkedWorkForce;
  String? barredList;
  String? barredListIssueDate;
  String? barredListCertificateNo;
  String? outcome;
  String? riskAssessmentCompleted;
  String? professionalBodyRegistration;
  String? professionalBodyRegistrationNo;
  String? professionalBodyRegistrationValid;
  String? professionalBodyRegistrationExpiryDate;
  String? professionalBodyRegistrationVerifiedDate;
  String? fitnessToPracticeIssues;
  String? fullEmploymentHistoryProvided;
  String? explanationForGaps;
  String? satisfactoryVerificationReasons;
  String? referencesReceived;
  String? allRequiredPaperworkChecked;
  String? fullUkDrivingLicence;
  String? coshh;
  String? coshhDate;
  String? fireSafety;
  String? fireSafetyDate;
  String? gdpr;
  String? gdprDate;
  String? healthAndSafetyLaw;
  String? healthAndSafetyLawDate;
  String? manualHandlingTheory;
  String? manualHandlingTheoryDate;
  String? movingAndHandlingPeople;
  String? movingAndHandlingPeopleDate;
  String? mentalCapacityAct;
  String? mentalCapacityActDate;
  String? basicFoodHygiene;
  String? basicFoodHygieneDate;
  String? bedRailSafety;
  String? bedRailSafetyDate;
  String? basicLifeSupport;
  String? basicLifeSupportDate;
  String? deprivationOfLiberty;
  String? deprivationOfLibertyDate;
  String? dutyOfCandor;
  String? dutyOfCandorDate;
  String? equalityAndDiversity;
  String? equalityAndDiversityDate;
  String? intermediateLifeSupport;
  String? intermediateLifeSupportDate;
  String? infectionControl;
  String? infectionControlDate;
  String? informationGovernance;
  String? informationGovernanceDate;
  String? safeguardingOfVulnerableAdults;
  String? safeguardingOfVulnerableAdultsDate;
  String? riddor;
  String? riddorDate;
  String? dementiaAwareness;
  String? dementiaAwarenessDate;
  String? managingMedications;
  String? managingMedicationsDate;
  String? completedBy;
  String? position;
  String? submitDate;

  ProfileDetailsTemp1({
    required this.vat,
    required this.idVerified,
    required this.documentType,
    required this.workInUkVerified,
    required this.workInUkVerifiedDocument,
    required this.individualRight,
    required this.individualRightExpiry,
    required this.criminalityCheckType,
    required this.levelOfCheck,
    required this.checkedWorkForce,
    required this.barredList,
    required this.barredListIssueDate,
    required this.barredListCertificateNo,
    required this.outcome,
    required this.riskAssessmentCompleted,
    required this.professionalBodyRegistration,
    required this.professionalBodyRegistrationNo,
    required this.professionalBodyRegistrationValid,
    required this.professionalBodyRegistrationExpiryDate,
    required this.professionalBodyRegistrationVerifiedDate,
    required this.fitnessToPracticeIssues,
    required this.fullEmploymentHistoryProvided,
    required this.explanationForGaps,
    required this.satisfactoryVerificationReasons,
    required this.referencesReceived,
    required this.allRequiredPaperworkChecked,
    required this.fullUkDrivingLicence,
    required this.coshh,
    required this.coshhDate,
    required this.fireSafety,
    required this.fireSafetyDate,
    required this.gdpr,
    required this.gdprDate,
    required this.healthAndSafetyLaw,
    required this.healthAndSafetyLawDate,
    required this.manualHandlingTheory,
    required this.manualHandlingTheoryDate,
    required this.movingAndHandlingPeople,
    required this.movingAndHandlingPeopleDate,
    required this.mentalCapacityAct,
    required this.mentalCapacityActDate,
    required this.basicFoodHygiene,
    required this.basicFoodHygieneDate,
    required this.bedRailSafety,
    required this.bedRailSafetyDate,
    required this.basicLifeSupport,
    required this.basicLifeSupportDate,
    required this.deprivationOfLiberty,
    required this.deprivationOfLibertyDate,
    required this.dutyOfCandor,
    required this.dutyOfCandorDate,
    required this.equalityAndDiversity,
    required this.equalityAndDiversityDate,
    required this.intermediateLifeSupport,
    required this.intermediateLifeSupportDate,
    required this.infectionControl,
    required this.infectionControlDate,
    required this.informationGovernance,
    required this.informationGovernanceDate,
    required this.safeguardingOfVulnerableAdults,
    required this.safeguardingOfVulnerableAdultsDate,
    required this.riddor,
    required this.riddorDate,
    required this.dementiaAwareness,
    required this.dementiaAwarenessDate,
    required this.managingMedications,
    required this.managingMedicationsDate,
    required this.completedBy,
    required this.position,
    required this.submitDate,
  });

  factory ProfileDetailsTemp1.fromJson(Map<String, dynamic> json) => ProfileDetailsTemp1(
        vat: json["vat"],
        idVerified: json["idVerified"],
        documentType: json["documentType"],
        workInUkVerified: json["workInUkVerified"],
        workInUkVerifiedDocument: json["workInUkVerifiedDocument"],
        individualRight: json["individualRight"],
        individualRightExpiry: json["individualRightExpiry"],
        criminalityCheckType: json["criminalityCheckType"],
        levelOfCheck: json["levelOfCheck"],
        checkedWorkForce: json["checkedWorkForce"],
        barredList: json["barredList"],
        barredListIssueDate: json["barredListIssueDate"],
        barredListCertificateNo: json["barredListCertificateNo"],
        outcome: json["outcome"],
        riskAssessmentCompleted: json["riskAssessmentCompleted"],
        professionalBodyRegistration: json["professionalBodyRegistration"],
        professionalBodyRegistrationNo: json["professionalBodyRegistrationNo"],
        professionalBodyRegistrationValid:
            json["professionalBodyRegistrationValid"],
        professionalBodyRegistrationExpiryDate:
            json["professionalBodyRegistrationExpiryDate"],
        professionalBodyRegistrationVerifiedDate:
            json["professionalBodyRegistrationVerifiedDate"],
        fitnessToPracticeIssues: json["fitnessToPracticeIssues"],
        fullEmploymentHistoryProvided: json["fullEmploymentHistoryProvided"],
        explanationForGaps: json["explanationForGaps"],
        satisfactoryVerificationReasons:
            json["satisfactoryVerificationReasons"],
        referencesReceived: json["referencesReceived"],
        allRequiredPaperworkChecked: json["allRequiredPaperworkChecked"],
        fullUkDrivingLicence: json["fullUkDrivingLicence"],
        coshh: json["coshh"],
        coshhDate: json["coshhDate"],
        fireSafety: json["fireSafety"],
        fireSafetyDate: json["fireSafetyDate"],
        gdpr: json["gdpr"],
        gdprDate: json["gdprDate"],
        healthAndSafetyLaw: json["healthAndSafetyLaw"],
        healthAndSafetyLawDate: json["healthAndSafetyLawDate"],
        manualHandlingTheory: json["manualHandlingTheory"],
        manualHandlingTheoryDate: json["manualHandlingTheoryDate"],
        movingAndHandlingPeople: json["movingAndHandlingPeople"],
        movingAndHandlingPeopleDate: json["movingAndHandlingPeopleDate"],
        mentalCapacityAct: json["mentalCapacityAct"],
        mentalCapacityActDate: json["mentalCapacityActDate"],
        basicFoodHygiene: json["basicFoodHygiene"],
        basicFoodHygieneDate: json["basicFoodHygieneDate"],
        bedRailSafety: json["bedRailSafety"],
        bedRailSafetyDate: json["bedRailSafetyDate"],
        basicLifeSupport: json["basicLifeSupport"],
        basicLifeSupportDate: json["basicLifeSupportDate"],
        deprivationOfLiberty: json["deprivationOfLiberty"],
        deprivationOfLibertyDate: json["deprivationOfLibertyDate"],
        dutyOfCandor: json["dutyOfCandor"],
        dutyOfCandorDate: json["dutyOfCandorDate"],
        equalityAndDiversity: json["equalityAndDiversity"],
        equalityAndDiversityDate: json["equalityAndDiversityDate"],
        intermediateLifeSupport: json["intermediateLifeSupport"],
        intermediateLifeSupportDate: json["intermediateLifeSupportDate"],
        infectionControl: json["infectionControl"],
        infectionControlDate: json["infectionControlDate"],
        informationGovernance: json["informationGovernance"],
        informationGovernanceDate: json["informationGovernanceDate"],
        safeguardingOfVulnerableAdults: json["safeguardingOfVulnerableAdults"],
        safeguardingOfVulnerableAdultsDate:
            json["safeguardingOfVulnerableAdultsDate"],
        riddor: json["riddor"],
        riddorDate: json["riddorDate"],
        dementiaAwareness: json["dementiaAwareness"],
        dementiaAwarenessDate: json["dementiaAwarenessDate"],
        managingMedications: json["managingMedications"],
        managingMedicationsDate: json["managingMedicationsDate"],
        completedBy: json["completedBy"],
        position: json["position"],
        submitDate: json["submitDate"],
      );

  Map<String, dynamic> toJson() => {
        "vat": vat,
        "idVerified": idVerified,
        "documentType": documentType,
        "workInUkVerified": workInUkVerified,
        "workInUkVerifiedDocument": workInUkVerifiedDocument,
        "individualRight": individualRight,
        "individualRightExpiry": individualRightExpiry,
        "criminalityCheckType": criminalityCheckType,
        "levelOfCheck": levelOfCheck,
        "checkedWorkForce": checkedWorkForce,
        "barredList": barredList,
        "barredListIssueDate": barredListIssueDate,
        "barredListCertificateNo": barredListCertificateNo,
        "outcome": outcome,
        "riskAssessmentCompleted": riskAssessmentCompleted,
        "professionalBodyRegistration": professionalBodyRegistration,
        "professionalBodyRegistrationNo": professionalBodyRegistrationNo,
        "professionalBodyRegistrationValid": professionalBodyRegistrationValid,
        "professionalBodyRegistrationExpiryDate":
            professionalBodyRegistrationExpiryDate,
        "professionalBodyRegistrationVerifiedDate":
            professionalBodyRegistrationVerifiedDate,
        "fitnessToPracticeIssues": fitnessToPracticeIssues,
        "fullEmploymentHistoryProvided": fullEmploymentHistoryProvided,
        "explanationForGaps": explanationForGaps,
        "satisfactoryVerificationReasons": satisfactoryVerificationReasons,
        "referencesReceived": referencesReceived,
        "allRequiredPaperworkChecked": allRequiredPaperworkChecked,
        "fullUkDrivingLicence": fullUkDrivingLicence,
        "coshh": coshh,
        "coshhDate": coshhDate,
        "fireSafety": fireSafety,
        "fireSafetyDate": fireSafetyDate,
        "gdpr": gdpr,
        "gdprDate": gdprDate,
        "healthAndSafetyLaw": healthAndSafetyLaw,
        "healthAndSafetyLawDate": healthAndSafetyLawDate,
        "manualHandlingTheory": manualHandlingTheory,
        "manualHandlingTheoryDate": manualHandlingTheoryDate,
        "movingAndHandlingPeople": movingAndHandlingPeople,
        "movingAndHandlingPeopleDate": movingAndHandlingPeopleDate,
        "mentalCapacityAct": mentalCapacityAct,
        "mentalCapacityActDate": mentalCapacityActDate,
        "basicFoodHygiene": basicFoodHygiene,
        "basicFoodHygieneDate": basicFoodHygieneDate,
        "bedRailSafety": bedRailSafety,
        "bedRailSafetyDate": bedRailSafetyDate,
        "basicLifeSupport": basicLifeSupport,
        "basicLifeSupportDate": basicLifeSupportDate,
        "deprivationOfLiberty": deprivationOfLiberty,
        "deprivationOfLibertyDate": deprivationOfLibertyDate,
        "dutyOfCandor": dutyOfCandor,
        "dutyOfCandorDate": dutyOfCandorDate,
        "equalityAndDiversity": equalityAndDiversity,
        "equalityAndDiversityDate": equalityAndDiversityDate,
        "intermediateLifeSupport": intermediateLifeSupport,
        "intermediateLifeSupportDate": intermediateLifeSupportDate,
        "infectionControl": infectionControl,
        "infectionControlDate": infectionControlDate,
        "informationGovernance": informationGovernance,
        "informationGovernanceDate": informationGovernanceDate,
        "safeguardingOfVulnerableAdults": safeguardingOfVulnerableAdults,
        "safeguardingOfVulnerableAdultsDate":
            safeguardingOfVulnerableAdultsDate,
        "riddor": riddor,
        "riddorDate": riddorDate,
        "dementiaAwareness": dementiaAwareness,
        "dementiaAwarenessDate": dementiaAwarenessDate,
        "managingMedications": managingMedications,
        "managingMedicationsDate": managingMedicationsDate,
        "completedBy": completedBy,
        "position": position,
        "submitDate": submitDate,
      };
}
